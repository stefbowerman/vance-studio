//
// Variables
// --------------------------------------------------


//== Colors
//
//## Gray and brand colors

$gray-base:              #000 !default;
$gray-darker:            lighten($gray-base, 8%) !default;    // #141414
$gray-dark:              lighten($gray-base, 20%) !default;   // #333
$gray:                   lighten($gray-base, 33.5%) !default; // #555
$gray-light:             lighten($gray-base, 46.7%) !default; // #777
$gray-lighter:           lighten($gray-base, 93.5%) !default; // #eee

$red:                   #F00;

//== Scaffolding
//
//## Settings for some of the most global styles.

$body-bg:               #fff !default;
$text-color:            $gray-darker !default;

$link-color:            $text-color !default;
$link-hover-color:      $red !default;
$link-hover-decoration: none !default;


//== Typography
//
//## Font, line-height, and color for body text, headings, and more.

$font-family-sans-serif:  "Neue Haas Grotesk", "Helvetica Neue", Helvetica, Arial, sans-serif !default;
$font-family-base:        $font-family-sans-serif !default;

$font-size-base:          14px !default;
$font-size-large:         ceil(($font-size-base * 1.25)) !default;
$font-size-small:         ceil(($font-size-base * 0.85)) !default;
$font-size-smaller:       ceil(($font-size-base * 0.75)) !default;

$font-size-h1:            floor(($font-size-base * 2.6)) !default;
$font-size-h2:            floor(($font-size-base * 2.15)) !default;
$font-size-h3:            ceil(($font-size-base * 1.7)) !default;
$font-size-h4:            ceil(($font-size-base * 1.25)) !default;
$font-size-h5:            $font-size-base !default;
$font-size-h6:            ceil(($font-size-base * 0.85)) !default;

//** Unit-less `line-height` for use in components like buttons.
$line-height-base:        1.52 !default; // 1.42857
//** Computed "line-height" (`font-size` * `line-height`) for use with `margin`, `padding`, etc.
$line-height-computed:    floor(($font-size-base * $line-height-base)) !default;

$letter-spacing:          0.1rem;
$letter-spacing-large:    $letter-spacing * 2.2;

//** By default, this inherits from the `<body>`.
$headings-font-family:    inherit !default;
$headings-font-weight:    700 !default;
$headings-line-height:    1.1 !default;
$headings-color:          inherit !default;

//-- Z-index master list
//
// Warning: Avoid customizing these values. They're used for a bird's eye view
// of components dependent on the z-axis and are designed to all work together.
//
// Note: These variables are not generated into the Customizer.

$zindex-header:           1000 !default;
$zindex-footer:           1000 !default;
$zindex-blowup:           1050 !default;
$zindex-modal-background: 1990 !default;
$zindex-modal:            2000 !default;
$zindex-featherlight:     2000 !default;

//== Media queries breakpoints
//
//## Define the breakpoints at which your layout will change, adapting to different screen sizes.

// Extra small screen / phone
//** Deprecated `$screen-xs` as of v3.0.1
$screen-xs:                  460px !default;
$screen-xs-min:              $screen-xs !default;

// Small screen / tablet
$screen-sm:                  600px !default;
$screen-sm-min:              $screen-sm !default;

// Medium screen / desktop
$screen-md:                  768px !default;
$screen-md-min:              $screen-md !default;

// Large screen / wide desktop
$screen-lg:                  1100px !default;
$screen-lg-min:              $screen-lg !default;

// So media queries don't overlap when required, provide a maximum
$screen-xs-max:              ($screen-sm-min - 1) !default;
$screen-sm-max:              ($screen-md-min - 1) !default;
$screen-md-max:              ($screen-lg-min - 1) !default;

//** Horizontal line color.
$hr-border:                   $gray-lighter !default;
$table-border-color:          $text-color;

$main-column-max-width:        580px;
$main-column-wide-max-width:   1000px;
$main-column-widest-max-width: 1200px;
$body-padding-h:               35px;

//== Forms
//
//##

$input-bg:                       $body-bg !default;
$input-bg-disabled:              $body-bg !default;
$input-color:                    $text-color !default;
$input-border:                   $text-color !default;
$input-color-placeholder:        #999 !default;

// Flexbox Mixins
// http://philipwalton.github.io/solved-by-flexbox/
// https://github.com/philipwalton/solved-by-flexbox
// 
// Copyright (c) 2013 Brian Franco
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// This is a set of mixins for those who want to mess around with flexbox
// using the native support of current browsers. For full support table
// check: http://caniuse.com/flexbox
//
// Basically this will use:
//
// * Fallback, old syntax (IE10, mobile webkit browsers - no wrapping)
// * Final standards syntax (FF, Safari, Chrome, IE11, Opera)
//
// This was inspired by:
// 
// * http://dev.opera.com/articles/view/advanced-cross-browser-flexbox/
// 
// With help from:
// 
// * http://w3.org/tr/css3-flexbox/
// * http://the-echoplex.net/flexyboxes/
// * http://msdn.microsoft.com/en-us/library/ie/hh772069(v=vs.85).aspx
// * http://css-tricks.com/using-flexbox/
// * http://dev.opera.com/articles/view/advanced-cross-browser-flexbox/
// * https://developer.mozilla.org/en-us/docs/web/guide/css/flexible_boxes

//----------------------------------------------------------------------

// Flexbox Containers
//
// The 'flex' value causes an element to generate a block-level flex
// container box.
//
// The 'inline-flex' value causes an element to generate a inline-level
// flex container box. 
//
// display: flex | inline-flex
//
// http://w3.org/tr/css3-flexbox/#flex-containers
//
// (Placeholder selectors for each type, for those who rather @extend)

@mixin flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
}

%flexbox { @include flexbox; }

//----------------------------------

@mixin inline-flex {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -moz-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

%inline-flex { @include inline-flex; }

//----------------------------------------------------------------------

// Flexbox Direction
//
// The 'flex-direction' property specifies how flex items are placed in
// the flex container, by setting the direction of the flex container's
// main axis. This determines the direction that flex items are laid out in. 
//
// Values: row | row-reverse | column | column-reverse
// Default: row
//
// http://w3.org/tr/css3-flexbox/#flex-direction-property

@mixin flex-direction($value: row) {
  @if $value == row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
  } @else if $value == column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
  } @else if $value == column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
  }
  -webkit-flex-direction: $value;
  -moz-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;
}
  // Shorter version:
  @mixin flex-dir($args...) { @include flex-direction($args...); }

//----------------------------------------------------------------------

// Flexbox Wrap
//
// The 'flex-wrap' property controls whether the flex container is single-line
// or multi-line, and the direction of the cross-axis, which determines
// the direction new lines are stacked in. 
//
// Values: nowrap | wrap | wrap-reverse
// Default: nowrap
//
// http://w3.org/tr/css3-flexbox/#flex-wrap-property

@mixin flex-wrap($value: nowrap) {
  // No Webkit Box fallback.
  -webkit-flex-wrap: $value;
  -moz-flex-wrap: $value;
  @if $value == nowrap {
    -ms-flex-wrap: none;
  } @else { 
    -ms-flex-wrap: $value; 
  }
  flex-wrap: $value;
}

//----------------------------------------------------------------------

// Flexbox Flow (shorthand)
//
// The 'flex-flow' property is a shorthand for setting the 'flex-direction'
// and 'flex-wrap' properties, which together define the flex container's
// main and cross axes.
//
// Values: <flex-direction> | <flex-wrap> 
// Default: row nowrap
//
// http://w3.org/tr/css3-flexbox/#flex-flow-property

@mixin flex-flow($values: (row nowrap)) {
  // No Webkit Box fallback.
  -webkit-flex-flow: $values;
  -moz-flex-flow: $values;
  -ms-flex-flow: $values;
  flex-flow: $values;
}

//----------------------------------------------------------------------

// Flexbox Order
//
// The 'order' property controls the order in which flex items appear within
// their flex container, by assigning them to ordinal groups.
//
// Default: 0
//
// http://w3.org/tr/css3-flexbox/#order-property

@mixin order($int: 0) {
  -webkit-box-ordinal-group: $int + 1;
  -webkit-order: $int;
  -moz-order: $int;
  -ms-flex-order: $int;
  order: $int;
}

//----------------------------------------------------------------------

// Flexbox Grow
//
// The 'flex-grow' property sets the flex grow factor. Negative numbers
// are invalid.
//
// Default: 0
//
// http://w3.org/tr/css3-flexbox/#flex-grow-property

@mixin flex-grow($int: 0) {
  -webkit-box-flex: $int;
  -webkit-flex-grow: $int;
  -moz-flex-grow: $int;
  -ms-flex-positive: $int;
  flex-grow: $int;
}

//----------------------------------------------------------------------

// Flexbox Shrink
//
// The 'flex-shrink' property sets the flex shrink factor. Negative numbers
// are invalid.
//
// Default: 1
//
// http://w3.org/tr/css3-flexbox/#flex-shrink-property

@mixin flex-shrink($int: 1) {
  -webkit-flex-shrink: $int;
  -moz-flex-shrink: $int;
  -ms-flex-negative: $int;
  flex-shrink: $int;
}

//----------------------------------------------------------------------

// Flexbox Basis
//
// The 'flex-basis' property sets the flex basis. Negative lengths are invalid. 
//
// Values: Like "width" 
// Default: auto
//
// http://www.w3.org/TR/css3-flexbox/#flex-basis-property

@mixin flex-basis($value: auto) {
  -webkit-flex-basis: $value;
  -moz-flex-basis: $value;
  -ms-flex-preferred-size: $value;
  flex-basis: $value;
}

//----------------------------------------------------------------------

// Flexbox "Flex" (shorthand)
//
// The 'flex' property specifies the components of a flexible length: the
// flex grow factor and flex shrink factor, and the flex basis. When an
// element is a flex item, 'flex' is consulted instead of the main size
// property to determine the main size of the element. If an element is
// not a flex item, 'flex' has no effect.
//
// Values: none | <flex-grow> <flex-shrink> || <flex-basis>
// Default: See individual properties (1 1 0).
//
// http://w3.org/tr/css3-flexbox/#flex-property

@mixin flex($fg: 1, $fs: null, $fb: null) {
    
  // Set a variable to be used by box-flex properties
  $fg-boxflex: $fg;

  // Box-Flex only supports a flex-grow value so let's grab the
  // first item in the list and just return that.
  @if type-of($fg) == 'list' {
    $fg-boxflex: nth($fg, 1);
  }

  -webkit-box-flex: $fg-boxflex;
  -webkit-flex: $fg $fs $fb;
  -moz-box-flex: $fg-boxflex;
  -moz-flex: $fg $fs $fb;
  -ms-flex: $fg $fs $fb;
  flex: $fg $fs $fb;
}

//----------------------------------------------------------------------

// Flexbox Justify Content
//
// The 'justify-content' property aligns flex items along the main axis
// of the current line of the flex container. This is done after any flexible
// lengths and any auto margins have been resolved. Typically it helps distribute
// extra free space leftover when either all the flex items on a line are
// inflexible, or are flexible but have reached their maximum size. It also
// exerts some control over the alignment of items when they overflow the line.
//
// Note: 'space-*' values not supported in older syntaxes.
//
// Values: flex-start | flex-end | center | space-between | space-around
// Default: flex-start
//
// http://w3.org/tr/css3-flexbox/#justify-content-property

@mixin justify-content($value: flex-start) {
  @if $value == flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
  } @else if $value == flex-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
  } @else if $value == space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
  } @else if $value == space-around {
    -ms-flex-pack: distribute;    
  } @else {
    -webkit-box-pack: $value;
    -ms-flex-pack: $value;
  }
  -webkit-justify-content: $value;
  -moz-justify-content: $value;
  justify-content: $value;
}
  // Shorter version:
  @mixin flex-just($args...) { @include justify-content($args...); }

//----------------------------------------------------------------------

// Flexbox Align Items
//
// Flex items can be aligned in the cross axis of the current line of the
// flex container, similar to 'justify-content' but in the perpendicular
// direction. 'align-items' sets the default alignment for all of the flex
// container's items, including anonymous flex items. 'align-self' allows
// this default alignment to be overridden for individual flex items. (For
// anonymous flex items, 'align-self' always matches the value of 'align-items'
// on their associated flex container.) 
//
// Values: flex-start | flex-end | center | baseline | stretch
// Default: stretch
//
// http://w3.org/tr/css3-flexbox/#align-items-property

@mixin align-items($value: stretch) {
  @if $value == flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
  } @else if $value == flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
  } @else {
    -webkit-box-align: $value;
    -ms-flex-align: $value;
  }
  -webkit-align-items: $value;
  -moz-align-items: $value;
  align-items: $value;
}

//----------------------------------

// Flexbox Align Self
//
// Values: auto | flex-start | flex-end | center | baseline | stretch
// Default: auto

@mixin align-self($value: auto) {
  // No Webkit Box Fallback.
  -webkit-align-self: $value;
  -moz-align-self: $value;
  @if $value == flex-start {
    -ms-flex-item-align: start;
  } @else if $value == flex-end {
    -ms-flex-item-align: end;
  } @else {
    -ms-flex-item-align: $value;
  }
  align-self: $value;
}

//----------------------------------------------------------------------

// Flexbox Align Content
//
// The 'align-content' property aligns a flex container's lines within the
// flex container when there is extra space in the cross-axis, similar to
// how 'justify-content' aligns individual items within the main-axis. Note,
// this property has no effect when the flexbox has only a single line.
//
// Values: flex-start | flex-end | center | space-between | space-around | stretch
// Default: stretch
//
// http://w3.org/tr/css3-flexbox/#align-content-property

@mixin align-content($value: stretch) {
  // No Webkit Box Fallback.
  -webkit-align-content: $value;
  -moz-align-content: $value;
  @if $value == flex-start {
    -ms-flex-line-pack: start;
  } @else if $value == flex-end {
    -ms-flex-line-pack: end;
  } @else {
    -ms-flex-line-pack: $value;
  }
  align-content: $value;
}

// Clearfix
@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

// Center-align a block level element
@mixin center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Placeholder text
@mixin placeholder($color) {
  // Firefox
  &::-moz-placeholder {
    color: $color;
    opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
  }
  &:-ms-input-placeholder { color: $color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: $color; } // Safari and Chrome
}
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */

//
// 1. Set default font family to sans-serif.
// 2. Prevent iOS and IE text size adjust after device orientation change,
//    without disabling user zoom.
//

html {
  font-family: sans-serif; // 1
  -ms-text-size-adjust: 100%; // 2
  -webkit-text-size-adjust: 100%; // 2
}

//
// Remove default margin.
//

body {
  margin: 0;
}

// HTML5 display definitions
// ==========================================================================

//
// Correct `block` display not defined for any HTML5 element in IE 8/9.
// Correct `block` display not defined for `details` or `summary` in IE 10/11
// and Firefox.
// Correct `block` display not defined for `main` in IE 11.
//

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

//
// 1. Correct `inline-block` display not defined in IE 8/9.
// 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
//

audio,
canvas,
progress,
video {
  display: inline-block; // 1
  vertical-align: baseline; // 2
}

//
// Prevent modern browsers from displaying `audio` without controls.
// Remove excess height in iOS 5 devices.
//

audio:not([controls]) {
  display: none;
  height: 0;
}

//
// Address `[hidden]` styling not present in IE 8/9/10.
// Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
//

[hidden],
template {
  display: none;
}

// Links
// ==========================================================================

//
// Remove the gray background color from active links in IE 10.
//

a {
  background-color: transparent;
}

//
// Improve readability of focused elements when they are also in an
// active/hover state.
//

a:active,
a:hover {
  outline: 0;
}

// Text-level semantics
// ==========================================================================

//
// Address styling not present in IE 8/9/10/11, Safari, and Chrome.
//

abbr[title] {
  border-bottom: 1px dotted;
}

//
// Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
//

b,
strong {
  font-weight: bold;
}

//
// Address styling not present in Safari and Chrome.
//

dfn {
  font-style: italic;
}

//
// Address variable `h1` font-size and margin within `section` and `article`
// contexts in Firefox 4+, Safari, and Chrome.
//

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

//
// Address styling not present in IE 8/9.
//

mark {
  background: #ff0;
  color: #000;
}

//
// Address inconsistent and variable font size in all browsers.
//

small {
  font-size: 80%;
}

//
// Prevent `sub` and `sup` affecting `line-height` in all browsers.
//

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

// Embedded content
// ==========================================================================

//
// Remove border when inside `a` element in IE 8/9/10.
//

img {
  border: 0;
}

//
// Correct overflow not hidden in IE 9/10/11.
//

svg:not(:root) {
  overflow: hidden;
}

// Grouping content
// ==========================================================================

//
// Address margin not present in IE 8/9 and Safari.
//

figure {
  margin: 1em 40px;
}

//
// Address differences between Firefox and other browsers.
//

hr {
  box-sizing: content-box;
  height: 0;
}

//
// Contain overflow in all browsers.
//

pre {
  overflow: auto;
}

//
// Address odd `em`-unit font size rendering in all browsers.
//

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

// Forms
// ==========================================================================

//
// Known limitation: by default, Chrome and Safari on OS X allow very limited
// styling of `select`, unless a `border` property is set.
//

//
// 1. Correct color not being inherited.
//    Known issue: affects color of disabled elements.
// 2. Correct font properties not being inherited.
// 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
//

button,
input,
optgroup,
select,
textarea {
  color: inherit; // 1
  font: inherit; // 2
  margin: 0; // 3
}

//
// Address `overflow` set to `hidden` in IE 8/9/10/11.
//

button {
  overflow: visible;
}

//
// Address inconsistent `text-transform` inheritance for `button` and `select`.
// All other form control elements do not inherit `text-transform` values.
// Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
// Correct `select` style inheritance in Firefox.
//

button,
select {
  text-transform: none;
}

//
// 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
//    and `video` controls.
// 2. Correct inability to style clickable `input` types in iOS.
// 3. Improve usability and consistency of cursor style between image-type
//    `input` and others.
//

button,
html input[type="button"], // 1
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button; // 2
  cursor: pointer; // 3
}

//
// Re-set default cursor for disabled elements.
//

button[disabled],
html input[disabled] {
  cursor: default;
}

//
// Remove inner padding and border in Firefox 4+.
//

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

//
// Address Firefox 4+ setting `line-height` on `input` using `!important` in
// the UA stylesheet.
//

input {
  line-height: normal;
}

//
// It's recommended that you don't attempt to style these elements.
// Firefox's implementation doesn't respect box-sizing, padding, or width.
//
// 1. Address box sizing set to `content-box` in IE 8/9/10.
// 2. Remove excess padding in IE 8/9/10.
//

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box; // 1
  padding: 0; // 2
}

//
// Fix the cursor style for Chrome's increment/decrement buttons. For certain
// `font-size` values of the `input`, it causes the cursor style of the
// decrement button to change from `default` to `text`.
//

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

//
// 1. Address `appearance` set to `searchfield` in Safari and Chrome.
// 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
//

input[type="search"] {
  -webkit-appearance: textfield; // 1
  box-sizing: content-box; //2
}

//
// Remove inner padding and search cancel button in Safari and Chrome on OS X.
// Safari (but not Chrome) clips the cancel button when the search input has
// padding (and `textfield` appearance).
//

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

//
// Define consistent border, margin, and padding.
//

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

//
// 1. Correct `color` not being inherited in IE 8/9/10/11.
// 2. Remove padding so people aren't caught out if they zero out fieldsets.
//

legend {
  border: 0; // 1
  padding: 0; // 2
}

//
// Remove default vertical scrollbar in IE 8/9/10/11.
//

textarea {
  overflow: auto;
}

//
// Don't inherit the `font-weight` (applied by a rule above).
// NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
//

optgroup {
  font-weight: bold;
}

// Tables
// ==========================================================================

//
// Remove most spacing between table cells.
//

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

@font-face {
  font-family: 'Neue Haas Grotesk';
  src: url('{{ "NeueHaasGrotesk-Roman.eot" | asset_url }}') format('embedded-opentype'),  
       url('{{ "NeueHaasGrotesk-Roman.otf" | asset_url }}')  format('opentype'),
       url('{{ "NeueHaasGrotesk-Roman.woff" | asset_url }}') format('woff'), 
       url('{{ "NeueHaasGrotesk-Roman.ttf" | asset_url }}')  format('truetype'), 
       url('{{ "NeueHaasGrotesk-Roman.svg" | asset_url }}#HaasGrotDisp-55Roman') format('svg');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Neue Haas Grotesk';
  src: url('{{ "NeueHaasGrotesk-Italic.eot" | asset_url }}') format('embedded-opentype'),  
       url('{{ "NeueHaasGrotesk-Italic.otf" | asset_url }}')  format('opentype'),
       url('{{ "NeueHaasGrotesk-Italic.woff" | asset_url }}') format('woff'), 
       url('{{ "NeueHaasGrotesk-Italic.ttf" | asset_url }}')  format('truetype'), 
       url('{{ "NeueHaasGrotesk-Italic.svg" | asset_url }}#HaasGrotDisp-56Italic') format('svg');
  font-weight: normal;
  font-style: italic;
}

@font-face {
  font-family: 'Neue Haas Grotesk';
  src: url('{{ "NeueHaasGrotesk-Medium.eot" | asset_url }}') format('embedded-opentype'),  
       url('{{ "NeueHaasGrotesk-Medium.otf" | asset_url }}')  format('opentype'),
       url('{{ "NeueHaasGrotesk-Medium.woff" | asset_url }}') format('woff'), 
       url('{{ "NeueHaasGrotesk-Medium.ttf" | asset_url }}')  format('truetype'), 
       url('{{ "NeueHaasGrotesk-Medium.svg" | asset_url }}#HaasGrotDisp-65Medium') format('svg');
  font-weight: bold;
  font-style: normal;
}
//
// Base
// --------------------------------------------------

* {
  box-sizing: border-box;
}
*:before,
*:after {
  box-sizing: border-box;
}


// Body reset

html {
  font-size: 10px;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}

body {
  font-family: $font-family-base;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $text-color;
  background-color: $body-bg;
  letter-spacing: $letter-spacing;
  text-transform: uppercase;
}

// Reset fonts for relevant elements
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}


// Links

a {
  color: $link-color;
  text-decoration: none;

  &:hover,
  &:focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }
}


// Figures
//
// We reset this here because previously Normalize had no `figure` margins. This
// ensures we don't break anyone's use of the element.

figure {
  margin: 0;
}


// Images

img {
  vertical-align: middle;
  max-width: 100%;
}

// Horizontal rules

hr {
  margin-top:    20px;
  margin-bottom: 20px;
  border: 0;
  border-top: 1px solid $hr-border;
}


// Only display content to screen readers
//
// See: http://a11yproject.com/posts/how-to-hide-content/

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
// Credit: HTML5 Boilerplate

.sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto;
  }
}


// iOS "clickable elements" fix for role="button"
//
// Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
// for traditionally non-focusable elements with role="button"
// see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

[role="button"] {
  cursor: pointer;
}

.main {
  margin-top: 105px;
  padding: 30px 0;

  // Breakpoint where things become position:fixed
  @media (min-width: $screen-sm-min){
    margin-top: 150px;
    margin-bottom: 40px;
  }
}

.main-column {
  @include center-block;
  max-width: $main-column-max-width;
  padding: 0 $body-padding-h;
  // width: calc(100% - ( 2#{$body-padding-h});

  @media (min-width: $screen-xs-min){
    padding: 0;
    width: $screen-xs-min - (2 * $body-padding-h);
  }

  @media (min-width: $screen-sm-min){
    width: $screen-sm-min - (2 * $body-padding-h);
  }

  @media (min-width: $screen-md-min){
    width: $screen-md-min - (2 * $body-padding-h);
  }

  @media (min-width: $screen-lg-min){
    width: calc(100% - ( 2 * #{$body-padding-h}));
  }

  // Don't include sidebar on pages with this wide main column
  &.main-column--wide {
    max-width: $main-column-wide-max-width;
  }

  // Don't include sidebar on pages with this wide main column
  &.main-column--widest {
    max-width: $main-column-widest-max-width;
  }
}

.sidebar {
  // You're on your own below this breakpoint
  @media (min-width: $screen-lg-min){
    position: fixed;
    top: 50%;
    transform: translateY(-50%);
    width: calc( ( (100% - #{$main-column-max-width}) / 2 ) - (2 * #{$body-padding-h}) );
    max-height: 100vh;
    overflow-y: scroll;
    overflow-wrap: break-word;

    &, 
    &.sidebar--right {
      right: $body-padding-h;
    }
    &.sidebar--left {
      right: auto;
      left: $body-padding-h;
    }
  }
}
//
// Typography
// --------------------------------------------------


// Headings
// -------------------------

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: $headings-font-family;
  font-weight: $headings-font-weight;
  line-height: $headings-line-height;
  color: $headings-color;
}

h1, .h1,
h2, .h2,
h3, .h3 {
  margin-top: $line-height-computed;
  margin-bottom: ($line-height-computed / 2);
}
h4, .h4,
h5, .h5,
h6, .h6 {
  margin-top: ($line-height-computed / 2);
  margin-bottom: ($line-height-computed / 2);
}

h1, .h1 { font-size: $font-size-h1; }
h2, .h2 { font-size: $font-size-h2; }
h3, .h3 { font-size: $font-size-h3; }
h4, .h4 { font-size: $font-size-h4; }
h5, .h5 { font-size: $font-size-h5; }
h6, .h6 { font-size: $font-size-h6; }


// Body text
// -------------------------

p {
  margin: 0 0 ($line-height-computed / 2);
}

// Emphasis & misc
// -------------------------

// Ex: (12px small font / 14px base font) * 100% = about 85%
small,
.small {
  font-size: floor((100% * $font-size-small / $font-size-base));
}

.smaller {
  font-size: floor((100% * $font-size-smaller / $font-size-base)); // ~ 78%
}

// Alignment
.text-left           { text-align: left; }
.text-right          { text-align: right; }
.text-center         { text-align: center; }
.text-justify        { text-align: justify; }
.text-nowrap         { white-space: nowrap; }

// Transformation
.text-lowercase      { text-transform: lowercase; }
.text-uppercase      { text-transform: uppercase; }
.text-capitalize     { text-transform: capitalize; }
.text-strike         { text-decoration: line-through; }

// Lists
// -------------------------

// Unordered and Ordered lists
ul,
ol {
  margin-top: 0;
  margin-bottom: ($line-height-computed / 2);
  padding-left: 0;
  list-style: none; // make all lists unstyled by default
  ul,
  ol {
    margin-bottom: 0;
  }
}

.rte {
  text-transform: none;
}
//
// Tables
// --------------------------------------------------

th {
  text-align: left;
}


// Baseline styles

.table {
  width: 100%;
  max-width: 100%;
  margin-bottom: 20px;
  text-transform: uppercase;
  // Cells
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        padding: 5px 10px;
        vertical-align: top;
        border-top: 1px solid $table-border-color;
      }
    }
  }
  // Bottom align for column headings
  > thead > tr > th {
    vertical-align: bottom;
  }
  // Remove top border from thead by default
  > caption + thead,
  > colgroup + thead,
  > thead:first-child {
    > tr:first-child {
      > th,
      > td {
        border-top: 0;
      }
    }
  }
}

// Add borders to that shit
.table {
  border: 1px solid $table-border-color;
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        border: 1px solid $table-border-color;
      }
    }
  }
}

// Responsive tables
//
// Wrap your tables in `.table-responsive` and we'll make them mobile friendly
// by enabling horizontal scrolling. Only applies <768px. Everything above that
// will display normally.

.table-responsive {
  overflow-x: auto;
  min-height: 0.01%; // Workaround for IE9 bug (see https://github.com/twbs/bootstrap/issues/14837)

  @media screen and (max-width: $screen-xs-max) {
    width: 100%;
    margin-bottom: 15px;
    overflow-y: hidden;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    border: 1px solid $table-border-color;

    // Tighten up spacing
    > .table {
      margin-bottom: 0;

      // Ensure the content doesn't wrap
      > thead,
      > tbody,
      > tfoot {
        > tr {
          > th,
          > td {
            white-space: nowrap;
          }
        }
      }
    }

    // Special overrides for the bordered tables
    > .table-bordered {
      border: 0;

      // Nuke the appropriate borders so that the parent can handle them
      > thead,
      > tbody,
      > tfoot {
        > tr {
          > th:first-child,
          > td:first-child {
            border-left: 0;
          }
          > th:last-child,
          > td:last-child {
            border-right: 0;
          }
        }
      }

      // Only nuke the last row's bottom-border in `tbody` and `tfoot` since
      // chances are there will be only one `tr` in a `thead` and that would
      // remove the border altogether.
      > tbody,
      > tfoot {
        > tr:last-child {
          > th,
          > td {
            border-bottom: 0;
          }
        }
      }

    }
  }
}

//
// Forms
// --------------------------------------------------

// Normalize non-controls
//
// Restyle and baseline non-control form elements.

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
  // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;
}

label {
  display: inline-block;
  max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
  margin-bottom: 5px;
  font-weight: bold;
}

// Normalize form controls
//
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] {
  box-sizing: border-box;
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  margin-top: 1px \9; // IE8-9
  line-height: normal;
}

input[type="file"] {
  display: block;
}

// Make range inputs behave like textual form controls
input[type="range"] {
  display: block;
  width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

// Common form controls
//
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]

.form-control {
  display: block;
  width: 100%;
  // height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: 7px 10px 5px; // If you change this, change inputs in _forms.scss and vice-versa
  font-size: $font-size-base;
  font-weight: bold;
  text-transform: uppercase;
  line-height: $line-height-base;
  letter-spacing: $letter-spacing;
  color: $input-color;
  background-color: $input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid $input-border;
  border-radius: 0;
  -webkit-appearance: none;

  // Customize the `:focus` state to imitate native WebKit styles.
  // @include form-control-focus;

  // Placeholder
  @include placeholder($input-color-placeholder);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: not-allowed;
  }

  // [converter] extracted textarea& to textarea.form-control
}

// Add dropdown arrow to select boxes
select.form-control {
  cursor: ns-resize;
  background: {
    image: url('{{ "select-down.png" | asset_url }}'); // native size 50w x 25h
    position: right 10px top 50%;
    repeat: no-repeat;
    size: auto 8px; // w x h.  
  }
  padding-right: 16px + (10px * 2); // image width + double horizontal form-control padding
  // Firefozx fixes
  -moz-appearance: none;
  text-indent: 0.01px;
  text-overflow: '';
}

// Reset height for `textarea`s
textarea.form-control {
  height: auto;
}

input[type="text"]
input[type="password"],
input[type="email"],
input[type="url"],
input[type="search"],
textarea {
  &.form-control {
    font-weight: normal;
    text-transform: none;
  }
}

.form-group {
  margin-bottom: ($line-height-computed / 2);
}

.has-error {
  .form-control,{
    border-color: $red;
  }
}

// Search inputs in iOS
//
// This overrides the extra rounded corners on search inputs in iOS so that our
// `.form-control` class can properly style them. Note that this cannot simply
// be added to `.form-control` as it's not specific enough. For details, see
// https://github.com/twbs/bootstrap/issues/11586.

input[type="search"] {
  -webkit-appearance: none;
}

// Remove spinner in firefox
@-moz-document url-prefix() {
  input[type="number"] {
      -moz-appearance: textfield;
  }
}


// Borrowed heavily from bootstrap

.button {
  display: inline-block;
  padding: 7px 10px 5px; // If you change this, change inputs in _forms.scss and vice-versa
  border: 1px solid $text-color;
  border-radius: 0;
  -webkit-appearance: none;
  vertical-align: middle;
  text-transform: uppercase;
  text-align: center;
  letter-spacing: $letter-spacing;
  font-weight: bold;
  cursor: pointer;
  user-select: none;
  white-space: nowrap;
  background: {
    color: $body-bg;
    color: transparent;
  }
  line-height: $line-height-base;

  // &,
  // &:active,
  // &.active {
  //   &:focus,
  //   &.focus {
  //     @include tab-focus;
  //   }
  // }

  // &:hover,
  // &:focus {
  //   color: $btn-default-color;
  //   text-decoration: none;
  // }

  &.disabled,
  &[disabled] {
    color: mix($text-color, $body-bg, 20%);
    cursor: not-allowed;
  }
}

.button--inverted,
.button--secondary {
  color: $body-bg;
  background: $text-color;
}

// Link buttons
// -------------------------

// Make a button look and behave like a link
.btn-link {
  color: $link-color;
  font-weight: normal;
  border-radius: 0;
  text-transform: none;

  &,
  &:active,
  &.active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:hover,
  &:focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
}

// Block button
// --------------------------------------------------

.button--block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.button--block + .button--block {
  margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.button--block {
    width: 100%;
  }
}
footer {
  padding: 20px $body-padding-h;
  text-align: center;
  @media (min-width: $screen-sm-min) {
    position: fixed;
    bottom: 42px;
    left: $body-padding-h;
    padding: 0;
    z-index: $zindex-footer;
  }
}
.header {
  position: relative;
  z-index: $zindex-header;
  letter-spacing: $letter-spacing-large;
  width: 100%;
  min-height: 1px;
  transform: translate3d(0, 0, 0); // Fore GPU acceleration to avoid flickering when adding / remove .header--fixed

  &.header--fixed {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
  }
}

.header-logo {
  position: absolute;
  top: 20px;
  left: 50%;
  transform: translateX(-50%);
}

.header-logo__img {
  width: auto;
  height: 64px;

  @media (min-width: $screen-sm-min) {
    height: 110px;
  }
}

.header-nav,
.header-nav-mobile,
.header-cart {
  position: absolute;
  top: 42px;

  @media (min-width: $screen-sm-min) {
    top: 60px;
  }
}

nav {
  
  // Add a star to the active nav item
  li {
    position: relative;
    margin-bottom: 5px;

    &.active {
      @media (min-width: $screen-sm-min){
        &:before {
          content: '\00d7';
          position: absolute;
          top: 2px;
          left: -15px;
          height: 7px;
          width: 7px;
          font-size: $font-size-small;
          line-height: 1;
        }
      }
      &, a {
        color: $red;
      }
    }
  }
}

.header-nav-mobile {
  left: $body-padding-h;

  nav {
    position: relative;
    margin: 40px 0 0;
    opacity: 0;
    pointer-events: none;
    transition: opacity 100ms ease-out;
    padding: 12px;
    border: 1px solid $text-color;
    background: $body-bg;

    &:before {
      content: "";
      height: 22px;
      width: 1px;
      position: absolute;
      top: -34px;
      left: 2px;
      background-color: $text-color;
    }

    > ul {
      &,
      & > li:last-child {
        margin-bottom: 0;
      }
    }
  }

  @media (max-width: $screen-xs-max){
    &.is-open {
      nav {
        opacity: 1;
        pointer-events: auto;
        transition: opacity 100ms ease-out;
      }
    }
  }
}

.header-nav-mobile__toggle {
  &:active,
  &:focus,
  &:hover {
    color: $link-color;
  }

  .is-open & {
    color: $link-hover-color;
  }
}

.header-nav {
  display: none;
  left: $body-padding-h;
}

.header-cart {
  right: $body-padding-h;
}

.header-cart__text {
  display: none;
}

@media (min-width: $screen-sm-min){
  .header-cart__text {
    display: inline;
  }
  .header-nav-mobile,
  .header-cart__icon {
    display: none;
  }
  .header-nav {
    display: block;
  }
}
.product-list {
  text-align: center;
  @media (min-width: $screen-sm-min){
    text-align: left;
  }
}

.product-list__product {
  &:not(:last-child) {
    margin-bottom: 100px;
  }
}

.product-list__product-img {
  width: 100%;
  margin-bottom: 30px;

  .product-list__product--sold-out & {
    opacity: 0.25;
  }
}

.product-list__product-info {
  text-align: center;
}

.product-list__product-info-link {

}

.product-list__product-title {
  font-weight: bold;
  letter-spacing: $letter-spacing-large;
}

.product-list__product-price {

}

.product-list__product-swatches {
  display: block;
  margin-top: 10px;
}

// Product list grid
.product-list--col-2,
.product-list--col-3 {
  @include flexbox;
  @include flex-wrap(wrap);
  @include justify-content(space-around);
}

.product-list__product {
  @media (min-width: $screen-md-min) {
    .product-list--col-3 & {
      width: percentage(1/2);
      padding: 0 $body-padding-h / 2;
    }
  }

  @media (min-width: $screen-lg-min) {
    .product-list--col-2 & {
      width: percentage(1/2);
      padding: 0 $body-padding-h / 2;
    }

    .product-list--col-3 & {
      width: percentage(1/3);
      padding: 0 $body-padding-h / 2;
    }
  }
}

.swatches {
  font-size: 0;
  padding: 0;
}

.swatch {
  display: inline-block;
  position: relative;
  height: 12px;
  width: 12px;
  margin: 0 6px;
  border: 1px solid $body-bg;
  background: {
    size: cover;
    repeat: no-repeat;
  }

  @media (min-width: $screen-xs-min){
    &:last-child {
      margin-right: 0;
    }
  }

  &.swatch--white {
    background-color: white;
    border-color: darken(white, 15%);
  }
  &.swatch--black {
    background-color: #2E2E2E;
  }
  &.swatch--yellow {
    background-color: #DFCA2F;
  }
  &.swatch--red {
    background-color: #E31033;
  }
  &.swatch--blue {
    background-color: #046499;
  }
  &.swatch--navy {
    background-color: #182E54;
  }
  &.swatch--green {
    background-color: #30A532;
  }
}

.swatch__link {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.pagination {
  display: block;
  margin: 45px 0;
  text-align: center;

  @media (min-width: $screen-xs-min) {
    text-align: right;
  }

  @media (min-width: $screen-md-min) { // Fix it to the bottom corner like how the nav is fixed to the top corners
    position: fixed;
    bottom: 41px;
    right: $body-padding-h;
    margin: 0;
  }

  > span {
    display: inline-block;
    padding: 0 2px;
    margin: 0 2px;
  }

  .page {
    &.current {
      color: $link-hover-color;
    }
  }

  .next,
  .prev {
    font-size: $font-size-large;
    line-height: 1;
  }
}
//
// Modals
// --------------------------------------------------

// .modal-open      - body class for killing the scroll
// .modal           - container to scroll within
// .modal-dialog    - positioning shell for the actual modal
// .modal-content   - actual modal w/ bg and corners and shit

// Kill the scroll on the body
.modal-open {
  overflow: hidden;
}

// Container that the modal scrolls within
.modal {
  display: none;
  overflow: hidden;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: $zindex-modal;
  -webkit-overflow-scrolling: touch;
  text-align: center;
  white-space: nowrap;

  // Prevent Chrome on Windows from adding a focus outline. For details, see
  // https://github.com/twbs/bootstrap/pull/10951.
  outline: 0;

  &:before {
    content: "";
    display: inline-block;
    height: 100%;
    vertical-align: middle;
    margin-left: -3px; // ??
  }
}
.modal-open .modal {
  overflow-x: hidden;
  overflow-y: auto;
}

// Shell div to position the modal with bottom padding
.modal-dialog {
  position: relative;
  width: auto;
  display: inline-block;
  vertical-align: middle;
  white-space: normal;
  overflow: auto;

  max-width: 90%;
  max-width: calc(100% - 40px);
  margin: 60px 15px;

  @media (min-width: $screen-lg-min){
    margin: 60px 20px;
  }
}

// Actual modal
.modal-content {
  position: relative;
  background-color: $body-bg;
  border: 1px solid $text-color; //old browsers fallback (ie8 etc)
  background-clip: padding-box;
  text-align: initial;
  // Remove focus outline from opened modal
  outline: 0;

  padding: 35px 15px 15px;
  @media (min-width: $screen-lg-min){
    padding: 35px 25px;
  }

}

// Modal background
.modal-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: $zindex-modal-background;
  background-color: $body-bg;
  &.in { opacity: 0.8; }
}

  .modal-content .close {
    /* position: centering vertical and horizontal */
    position: absolute;
    z-index: 9999;
    top: 2px;
    right: 2px;

    /* dimensions: 25px x 25px */
    line-height: 25px;
    width: 25px;

    /* styling */
    cursor: pointer;
    text-align: center;
    border: none;
    padding: 0;
    font-size: 2.8rem;
    background: transparent;

    /* See http://stackoverflow.com/questions/16077341/how-to-reset-all-default-styles-of-the-html5-button-element */
    &::-moz-focus-inner {
      border: 0;
      padding: 0;
    }
  }

// Modal body
// Where all modal content resides (sibling of .modal-header and .modal-footer)
.modal-body {
  position: relative;
}

// Measure scrollbar width for padding body during modal show/hide
.modal-scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll;
}

@media (min-width: $screen-md-min) {
.modal-dialog {
    min-width: 500px;
  }
}
.modal-subscribe {

  input[type="email"] {
    padding-right: 106px; // Make room for abs positioned button
  }
  button[type="submit"] {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    font-size: $font-size-small;
  }
}


.modal-subscribe__logo {
  height: 85px;
  @include center-block();
  margin-bottom: 25px;
}

.modal-subscribe__content-image {
  display: none;
  @media (min-width: $screen-sm-min){
    display: block;
  }
}

.modal-subscribe__content-wrap {
  @include flexbox;
  @include align-items(center);
}

.modal-subscribe__content-main {
  @include flex(1);

  .modal-subscribe__content-wrap--has-image & {
    @media (min-width: $screen-sm-min){
      padding-left: 25px;
    }
  }
}
.ticker {
  padding: 11px $body-padding-h*2;
  text-align: center;
  font-size: $font-size-small;
  border-bottom: 1px solid transparent;

  &.ticker--black {
    background-color: $text-color;
    color: #FFF;
  }

  &.ticker--outline {
    background-color: #FFF;
    border-bottom-color: $text-color;
  }
}

.ticker__close {
  position: absolute;
  top: 8px;
  right: $body-padding-h - 9px;
  height: 25px;
  width: 25px;
  line-height: 25px;
  font-weight: bold;
  font-size: 1.8rem;

  &:hover,
  &:focus {
    color: $red;
  }

  .ticker--black & {
    color: white;
    &:hover,
    &:focus {
      color: $red;
    }
  }
}

// Mini currency selector
#currency-select {
  display: inline-block;
  width: auto;
  padding: 4px 26px 2px 8px;
  font-size: $font-size-smaller;
  font-weight: normal;
  background-size: auto 5px;
  background-position: right 7px top 50%;

  // Only show the currency selector on relevant pages
  display: none;
  .template-product &,
  .template-cart & {
    display: block;
  }
}
// Based on template name.
// Styles contained exclusively inside the named tempalate
.collection-title,
.collection-description {
  margin: 0 0 30px;
  font-size: $font-size-base;
  text-align: center;
}

.collection-title + .collection-description {
  margin-top: -15px;
}
/* ==========================================================================
  Product Detail Page
  ========================================================================== */

/* START Product Photos */
.product-photos {
  margin-bottom: 30px;
  @media (min-width: $screen-lg-min) {
    margin-bottom: 0;
  }
}

.product-photo__main {
  position: relative;
  border: 1px solid transparent;
  transition: border-color 100ms ease;

  &.is-zoomable {
    cursor: -webkit-zoom-in;
    cursor: zoom-in;
  }
  &.is-zoomed {
    border-color: darken($body-bg, 8%);
    cursor: -webkit-zoom-out;
    cursor: zoom-out;
  }
}

.product-photo-thumbs {
  margin: 25px 0;
  text-align: center;
}

.product-photo-thumb {
  width: 76px;
  border: 1px solid $gray-lighter;
  margin: 0 5px 10px;
  display: inline-block;
  cursor: pointer;

  a {
    display: block;
    padding: 3px;
  }
}

$product-blowup-dimension: 1200px;

body.product-blowup-open {
  height: 100%;
  overflow: hidden;
}

.product-blowup {
  position: absolute;
  z-index: -$zindex-blowup;
  bottom: 0;
  left: 0;
  right: 0;
  background: $body-bg;
  opacity: 0;
  overflow: hidden;
  cursor: pointer;
  transition: opacity 150ms ease-in-out, z-index 150ms step-end;

  &.is-active {
    z-index: $zindex-blowup;
    opacity: 1;
    transition: opacity 150ms ease-in-out, z-index 150ms step-start;
  }
}

.product-blowup__close {
  position: absolute;
  z-index: $zindex-blowup + 1;
  top: 10px;
  right: 10px;
  height: 40px;
  width: 40px;
  line-height: 40px;
  text-align: center;
  font-size: 3.5rem;
  font-weight: bold;
  cursor: pointer;
  text-shadow:  0px  2px 0px $body-bg, 
                0px -2px 0px $body-bg, 
                2px  0px 0px $body-bg, 
               -2px  0px 0px $body-bg;

  &:active,
  &:focus,
  &:hover {
    color: $link-color;
  }
}

.product-blowup__image {
  position: absolute;
  width: $product-blowup-dimension;
  height: auto;
  left: 50%;
  top: 50%;
  margin-left: -($product-blowup-dimension / 2);
  margin-top: -($product-blowup-dimension / 2);
  max-width: none;
}

.product-blowup__scroll {
  position: relative;
  z-index: 1;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  width: $product-blowup-dimension;
  height: $product-blowup-dimension;
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  -ms-transform: translateZ(0);
  -o-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-text-size-adjust: none;
  -moz-text-size-adjust: none;
  -ms-text-size-adjust: none;
  -o-text-size-adjust: none;
  text-size-adjust: none;
}

/* END Product Photos */

/* START Product sidebar stuff */

.product-details,
.product-video {
  @extend .sidebar;
  @include center-block;
  max-width: 400px;
  @media (min-width: $screen-lg-min){
    max-width: none;
  }
}

.product-details {
  @media (min-width: $screen-lg-min){
    max-width: none;
    .single-option-selector,
    .button,
    .product-details__description {
      max-width: 250px;
    }
  }
}

.product-details__essential {
  margin-bottom: 30px;
}

.product-video {
  @extend .sidebar--left;
  @media (min-width: $screen-lg-min){
    .product-video__wrapper {
      max-width: 250px;
      margin-left: auto;
    }
  }
}

/* END Product sidebar stuff */

.size-guide-toggle {
  display: inline-block;
  margin: 20px 0 10px;
  &:active,
  &:focus {
    color: $text-color;
  }
}

// Match width with .product-details
.size-guide {
  width: 550px;
  max-width: 100%;
  font-size: $font-size-small;

  table {
    th, td {
      width: auto !important;
      height: auto !important;
    }
    &:last-of-type {
      margin-bottom: 0;
    }
  }
}

.product-video__toggle {
  @media (min-width: $screen-lg-min){
    display: none;
  }
}

.product-video__ratio {
  position: relative;
  padding-bottom: 164%;
  height: 0;
  overflow: hidden;
  display: none;
  @media (min-width: $screen-lg-min){
    display: block;
  }

  // In case the video shows up in a modal
  #modal-product-video & {
    width: 100%;
    max-width: 100%;
    display: block;
  }
  
  iframe {
    position: absolute;
    width: 240%;
    height: 227%;
    top: -60%;
    left: -70%;
  }
}

#modal-product-video .modal-dialog {
  min-width: 300px;
}

/* Quickly hiding default variant drop-down when JavaScript is enabled */
/* See this: http://www.learningjquery.com/2008/10/1-way-to-avoid-the-flash-of-unstyled-content/ */
.js #product-select { display: none; }

/* Product option wrapper. */
.selector-wrapper {
  + .selector-wrapper {
    margin-top: 15px;
  }

  label {
    display: none; // extend sr-only?
    font-weight: normal; // in case we show the label
  }
}

// .product-soldoutmsg {
//   text-transform: none;
//   margin-bottom: 20px;
// }

.product-details__title {
  margin: 0 0 5px;
  font-size: $font-size-base;
}

.product-details__price {
  .product-compare-price {
    padding-left: 5px;
    text-decoration: line-through;
  }
}

.button--addtocart {
  @extend .button--block;
  margin: 25px 0;

  &[disabled] {
    color: $red;
  }
}

.product-details__description {
  text-transform: none;
  @media (min-width: $screen-lg-min){
    font-size: $font-size-base - 1;
  }
  // Hide empty <p>'s to avoid weird spacing issues.
  // We do some string manipulation in the product template that might leave empty elements here
  p:empty {
    display: none;
  }
}

/* ==========================================================================
  Shopping Cart Page
  ========================================================================== */

.cart-table {
  width: 100%;
  margin-bottom: 0;
  border: 0;
  display: table;
  border-collapse: collapse;

  thead {
    display: none;
  }

  td {
    border-bottom: 1px solid $text-color;
    border-top: 1px solid $text-color;
    padding: 20px 8px;
  
    &:first-child {
      padding-left: 0;
    }

    &:last-child {
      padding-right: 0;
      text-align: right;
    }
  }
}

// TR and child TDs
.cart-row {}

.cart-row__img {
  width: 80px;
  @media (min-width: $screen-xs-min) {
    width: 115px;
  }
}

.cart-row__item {
  h2 {
    margin: 0 0 5px;
    font-size: inherit;
    line-height: inherit;
  }
  .cart-row__item-remove {
    @media (min-width: $screen-xs-min){
      display: none;
    }
  }
}

.cart-row__price {}

.cart-row__qty {
  input {
    width: 35px;
    text-align: center;
    // Todo - Move this out 
    &::-webkit-inner-spin-button, 
    &::-webkit-outer-spin-button { 
      -webkit-appearance: none; 
      margin: 0; 
    }
  }
}

.cart-row__total {}

.cart-row__remove {
  @media (max-width: ($screen-xs-min - 1)){
    display: none;
  }
}

.cart-footer {
  @include clearfix;

  h2, h3 {
    font-size: inherit;
  }

  .button--checkout {
    display: inline-block;
    width: 100%;
    float: right;
    @media (min-width: 656px){
      width: auto;
    }
  }

  .cart-currency-note {
    margin-top: 20px;
    padding: 0 20px;
    font-size: $font-size-smaller;
    text-align: center;
  }
}
.sidebar-about-content {
  margin-top: 30px;
  &,
  .form-control {
    text-align: center;
  }
  .newsletter-subscribe-input-wrapper {
    position: relative;
    
    button[type="submit"] {
      @extend .btn-link;
      position: absolute;
      top: 3px;
      right: 3px;
      opacity: 0;
      font-size: 14px;

      &:hover,
      &:focus {
        opacity: 1;
      }
    }
  }
  @media (min-width: $screen-lg-min){
    margin-top: 0;
    max-width: 350px;
    &,
    .form-control {
      text-align: left;
    }
  }
}
.archive-content {}

.archive-content--hidden {
  opacity: 0;
}

.archive-grid {
  margin: 0 -4px;
}
.archive-grid__spacer,
.archive-grid__item {
  width: percentage(1/2);
  @media (min-width: $screen-md-min){
    width: percentage(1/3);  
  }
}
.archive-grid__item {
  padding: 0 4px;
  margin-bottom: 8px;
}

.page-title {
  text-align: center;
  font-size: $font-size-base;
  font-weight: bold;
  margin-bottom: $line-height-computed;
}
.banner-video-wrapper {
  width: 100%;
  height: 0;
  position: relative;
  margin-bottom: 40px;
  padding-bottom: 20%;
  overflow: hidden;
  pointer-events: none;
  background-color: black;
  display: none;

  @media (min-width: 768px){
    display: block;
  }
  .touchevents & {
    display: none;
  }
}

.banner-video-positioner {
  position: absolute;
  top: -15%;
  left: -33%;
  right: -33%;
  bottom: -40%;

  iframe {
    position: absolute; 
    top: 0; 
    left: 0; 
    right: 0; 
    bottom: 0; 
    height: 100%; 
    width: 100%;
  }
}
//
// Utility classes
// --------------------------------------------------

.clearfix {
  @include clearfix;
}
.center-block {
  @include center-block;
}
.pull-right {
  float: right !important;
}
.pull-left {
  float: left !important;
}

// Hide from screenreaders and browsers
.hidden {
  display: none !important;
}

// Prevent click interactions on certain elements
.click-shield {
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
